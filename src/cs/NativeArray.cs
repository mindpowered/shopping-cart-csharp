// Generated by Haxe 4.1.1

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace cs._NativeArray {
	public class NativeArrayIterator<T> : global::haxe.lang.HxObject, global::cs._NativeArray.NativeArrayIterator {
		
		static bool __hx_init_called = false;
		static NativeArrayIterator() {
			if(global::cs._NativeArray.NativeArrayIterator<object>.__hx_init_called) return;
			global::cs._NativeArray.NativeArrayIterator<object>.__hx_init_called = true;
			unchecked{
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				global::haxe.lang.FieldLookup.addFields(new int[]{407283053, 1224901875}, new string[]{"hasNext", "next"});
			}
			
		}
		#line default
		
		public NativeArrayIterator(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public NativeArrayIterator(T[] arr) {
			#line 67 "/opt/haxe/std/cs/NativeArray.hx"
			global::cs._NativeArray.NativeArrayIterator<object>.__hx_ctor_cs__NativeArray_NativeArrayIterator<T>(((global::cs._NativeArray.NativeArrayIterator<T>) (this) ), ((T[]) (arr) ));
		}
		#line default
		
		protected static void __hx_ctor_cs__NativeArray_NativeArrayIterator<T_c>(global::cs._NativeArray.NativeArrayIterator<T_c> __hx_this, T_c[] arr) {
			#line 68 "/opt/haxe/std/cs/NativeArray.hx"
			__hx_this.arr = arr;
			__hx_this.idx = ((uint) (0) );
		}
		#line default
		
		public static object __hx_cast<T_c_c>(global::cs._NativeArray.NativeArrayIterator me) {
			#line 63 "/opt/haxe/std/cs/NativeArray.hx"
			return ( (( me != null )) ? (me.cs__NativeArray_NativeArrayIterator_cast<T_c_c>()) : default(object) );
		}
		#line default
		
		public virtual object cs__NativeArray_NativeArrayIterator_cast<T_c>() {
			unchecked {
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
					#line 63 "/opt/haxe/std/cs/NativeArray.hx"
					return this;
				}
				
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				global::cs._NativeArray.NativeArrayIterator<T_c> new_me = new global::cs._NativeArray.NativeArrayIterator<T_c>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				global::Array<string> fields = global::Reflect.fields(this);
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				int i = 0;
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				while (( i < fields.length )) {
					#line 63 "/opt/haxe/std/cs/NativeArray.hx"
					string field = fields[i++];
					#line 63 "/opt/haxe/std/cs/NativeArray.hx"
					switch (field) {
						case "arr":
						{
							#line 63 "/opt/haxe/std/cs/NativeArray.hx"
							if (( this.arr != null )) {
								#line 63 "/opt/haxe/std/cs/NativeArray.hx"
								T_c[] __temp_new_arr1 = new T_c[this.arr.Length];
								#line 63 "/opt/haxe/std/cs/NativeArray.hx"
								int __temp_i2 = -1;
								#line 63 "/opt/haxe/std/cs/NativeArray.hx"
								while ((  ++ __temp_i2 < this.arr.Length )) {
									#line 63 "/opt/haxe/std/cs/NativeArray.hx"
									object __temp_obj3 = ((object) (this.arr[__temp_i2]) );
									#line 63 "/opt/haxe/std/cs/NativeArray.hx"
									if (( __temp_obj3 != null )) {
										#line 63 "/opt/haxe/std/cs/NativeArray.hx"
										__temp_new_arr1[__temp_i2] = global::haxe.lang.Runtime.genericCast<T_c>(__temp_obj3);
									}
									
								}
								
								#line 63 "/opt/haxe/std/cs/NativeArray.hx"
								new_me.arr = __temp_new_arr1;
							}
							else {
								#line 63 "/opt/haxe/std/cs/NativeArray.hx"
								new_me.arr = null;
							}
							
							#line 63 "/opt/haxe/std/cs/NativeArray.hx"
							break;
						}
						
						
						default:
						{
							#line 63 "/opt/haxe/std/cs/NativeArray.hx"
							global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
							#line 63 "/opt/haxe/std/cs/NativeArray.hx"
							break;
						}
						
					}
					
				}
				
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				return new_me;
			}
			#line default
		}
		
		
		public T[] arr;
		
		public uint idx;
		
		public bool hasNext() {
			#line 73 "/opt/haxe/std/cs/NativeArray.hx"
			return ( this.idx < ( this.arr as global::System.Array ).Length );
		}
		#line default
		
		public T next() {
			#line 76 "/opt/haxe/std/cs/NativeArray.hx"
			return global::haxe.lang.Runtime.genericCast<T>(this.arr[((int) (this.idx++) )]);
		}
		#line default
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				switch (hash) {
					case 5243965:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						this.idx = ((uint) (@value) );
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return @value;
					}
					
					
					default:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				switch (hash) {
					case 5243965:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						this.idx = ((uint) (global::haxe.lang.Runtime.toInt(@value)) );
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return @value;
					}
					
					
					case 4849249:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						this.arr = ((T[]) (@value) );
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return @value;
					}
					
					
					default:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				switch (hash) {
					case 1224901875:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "next", 1224901875)) );
					}
					
					
					case 407283053:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "hasNext", 407283053)) );
					}
					
					
					case 5243965:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return this.idx;
					}
					
					
					case 4849249:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return this.arr;
					}
					
					
					default:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				switch (hash) {
					case 5243965:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return ((double) (this.idx) );
					}
					
					
					default:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				#line 63 "/opt/haxe/std/cs/NativeArray.hx"
				switch (hash) {
					case 1224901875:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return this.next();
					}
					
					
					case 407283053:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return this.hasNext();
					}
					
					
					default:
					{
						#line 63 "/opt/haxe/std/cs/NativeArray.hx"
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			#line 63 "/opt/haxe/std/cs/NativeArray.hx"
			baseArr.push("idx");
			#line 63 "/opt/haxe/std/cs/NativeArray.hx"
			baseArr.push("arr");
			#line 63 "/opt/haxe/std/cs/NativeArray.hx"
			base.__hx_getFields(baseArr);
		}
		#line default
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace cs._NativeArray {
	[global::haxe.lang.GenericInterface(typeof(global::cs._NativeArray.NativeArrayIterator<object>))]
	public interface NativeArrayIterator : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object cs__NativeArray_NativeArrayIterator_cast<T_c>();
		
		bool hasNext();
		
	}
}


